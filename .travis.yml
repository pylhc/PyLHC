env:
  global:
    - CC_TEST_REPORTER_ID=0e27bf1c9efa4cf36ab9fcd5398fa2963e197abdb7b9e4bdd93668112809d89a

stages:
  - name: test-basic
    if: branch != master
  - name: test-full
    if: branch = master
  - name: documentation
    if: branch = master
  - name: package
    if: tag =~ ^v\d+\.\d+\.\d+.*

# Default python version that will be inherited
# Additional ones can be defined later
language: python
python: 3.6

email:
  on_success: never
  on_failure: never


# Install omc3 and pyjapc manually
_manual_install: &manual_install
  install:
    - python -m pip install -e git+git://github.com/pylhc/omc3.git#egg=omc3
    - python -m pip install -e git+https://gitlab.cern.ch/scripting-tools/pyjapc.git#egg=pyjapc


jobs:
  include:
    # Tests ---
    - &test-full
      stage: test-full
      <<: *manual_install
      before_script:
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
        - ./cc-test-reporter before-build
      script:
        - python setup.py test --pytest-args='--mpl'
      after_script:
        - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT

    # Test only basic test classes
    - &test-basic
      stage: test-basic
      <<: *manual_install
      before_script:
        - python -m pip install -e git+git://github.com/pylhc/omc3.git#egg=omc3
        - python -m pip install -e git+https://gitlab.cern.ch/scripting-tools/pyjapc.git#egg=pyjapc
      script:
        - python setup.py test --pytest-args='--mpl -o python_classes=BasicTests'


    # Define additional python versions for tests
    - <<: *test-full
      python: 3.7

    - <<: *test-full
      python: 3.8

    - <<: *test-basic
      python: 3.7

    - <<: *test-basic
      python: 3.8

    - stage: documentation
      <<: *manual_install
      before_script:  #  could be install, but don't want to override manual_install
        - pip install '.[doc]'
      script:
        - travis-sphinx build --source=doc/ --nowarn
      after_success:
        - travis-sphinx deploy

    - stage: package
      install:
        - pip install twine
      before_script:
        - |
          cat << EOF | tee ~/.pypirc 1>/dev/null
          [distutils]
          index-servers=
              pypi
          [pypi]
            username: $PYPI_USERNAME
            password: $PYPI_PASSWORD
      script:
        - python setup.py sdist bdist_wheel
        - twine check dist/*
        - twine upload dist/*
